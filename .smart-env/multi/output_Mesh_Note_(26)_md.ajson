
"smart_sources:output/Mesh Note (26).md": {"path":"output/Mesh Note (26).md","last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"54729e156c467142fa0d8a36079230aad3b3979cf8fb0513a8c4d8da316b723c"}}},"last_read":{"hash":"54729e156c467142fa0d8a36079230aad3b3979cf8fb0513a8c4d8da316b723c","at":1745044242381},"class_name":"SmartSource","last_import":{"mtime":1743124368830,"size":4393,"at":1745044139649,"hash":"54729e156c467142fa0d8a36079230aad3b3979cf8fb0513a8c4d8da316b723c"},"blocks":{"#📌 Optimal Codebase Architectures for AI Coding Tools":[1,89],"#📌 Optimal Codebase Architectures for AI Coding Tools#{1}":[3,17],"#---frontmatter---":[5,16],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts":[18,68],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️":[20,38],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{1}":[21,25],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{2}":[26,30],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{3}":[31,34],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{4}":[35,38],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️":[39,68],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{1}":[40,44],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{2}":[45,55],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{3}":[56,60],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{4}":[61,64],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{5}":[65,68],"#📌 Optimal Codebase Architectures for AI Coding Tools#🛠️ Actionable Steps / Implementation":[69,77],"#📌 Optimal Codebase Architectures for AI Coding Tools#🛠️ Actionable Steps / Implementation#{1}":[70,75],"#📌 Optimal Codebase Architectures for AI Coding Tools#🛠️ Actionable Steps / Implementation#{2}":[76,77],"#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading":[78,89],"#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading#{1}":[79,81],"#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading#{2}":[82,86],"#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading#{3}":[87,89]},"outlinks":[{"title":"Vertical Slice Example","target":"https://github.com/indie-dev-dan/codebase-architectures/tree/main/vertical-slice","line":80},{"title":"Atomic Composable Example","target":"https://github.com/indie-dev-dan/codebase-architectures/tree/main/atomic-composable","line":81}]},"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"54729e156c467142fa0d8a36079230aad3b3979cf8fb0513a8c4d8da316b723c"}}},"text":null,"length":0,"last_read":{"hash":"54729e156c467142fa0d8a36079230aad3b3979cf8fb0513a8c4d8da316b723c","at":1745044236309},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools","lines":[1,89],"size":4345,"outlinks":[{"title":"Vertical Slice Example","target":"https://github.com/indie-dev-dan/codebase-architectures/tree/main/vertical-slice","line":80},{"title":"Atomic Composable Example","target":"https://github.com/indie-dev-dan/codebase-architectures/tree/main/atomic-composable","line":81}],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#{1}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"4914ef5b1105871a4d15b95831819944be5279312384f93fb45ddbabc296473f"}}},"text":null,"length":0,"last_read":{"hash":"4914ef5b1105871a4d15b95831819944be5279312384f93fb45ddbabc296473f","at":1745044236607},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#{1}","lines":[3,17],"size":962,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#---frontmatter---": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"be0ab7e03731cb88a11516f14dcd66eb4636618aa39d44ebc39193eb79bc694d"}}},"text":null,"length":0,"last_read":{"hash":"be0ab7e03731cb88a11516f14dcd66eb4636618aa39d44ebc39193eb79bc694d","at":1745044236880},"key":"output/Mesh Note (26).md#---frontmatter---","lines":[5,16],"size":788,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"66739d1da4f2b936c0ff740d89445709e9e5ad51e220a7579e77fc6a70542c30"}}},"text":null,"length":0,"last_read":{"hash":"66739d1da4f2b936c0ff740d89445709e9e5ad51e220a7579e77fc6a70542c30","at":1745044237176},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts","lines":[18,68],"size":2113,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"5e2d1b46a41b9c98b92effc5ab25e6139e794756d686baf3e7540347ed35ef1d"}}},"text":null,"length":0,"last_read":{"hash":"5e2d1b46a41b9c98b92effc5ab25e6139e794756d686baf3e7540347ed35ef1d","at":1745044237478},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️","lines":[20,38],"size":869,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{1}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"5949ff2bb6e434cad2f723891f7c2959275b6c4d62dde77560d9495d481a8775"}}},"text":null,"length":0,"last_read":{"hash":"5949ff2bb6e434cad2f723891f7c2959275b6c4d62dde77560d9495d481a8775","at":1745044237751},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{1}","lines":[21,25],"size":165,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{2}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"efdff28734fc17733b22df0b8932e72158bf08227e1fe019a858fb4847c2cc99"}}},"text":null,"length":0,"last_read":{"hash":"efdff28734fc17733b22df0b8932e72158bf08227e1fe019a858fb4847c2cc99","at":1745044238078},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{2}","lines":[26,30],"size":438,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{3}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"31de118ba61e457914e95dfe6bd4b1c6735ed2cd13ac49769e6131bd464c5dc4"}}},"text":null,"length":0,"last_read":{"hash":"31de118ba61e457914e95dfe6bd4b1c6735ed2cd13ac49769e6131bd464c5dc4","at":1745044238364},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{3}","lines":[31,34],"size":189,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{4}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"5811d953170b6793a8a45ca5e752d10eef5ae29cf779f58152be963074ff9bdb"}}},"text":null,"length":0,"last_read":{"hash":"5811d953170b6793a8a45ca5e752d10eef5ae29cf779f58152be963074ff9bdb","at":1745044238657},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{4}","lines":[35,38],"size":18,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"75fe43efefd62d2e3649ad39cde917b8a0ae6dae3e7f424f4e2acb50a443f37d"}}},"text":null,"length":0,"last_read":{"hash":"75fe43efefd62d2e3649ad39cde917b8a0ae6dae3e7f424f4e2acb50a443f37d","at":1745044238966},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️","lines":[39,68],"size":1221,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{1}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"8d49cf43f860a9a92bc7ba2639b1f1d2bef788914e9b7581a0ff264aeb8ea75b"}}},"text":null,"length":0,"last_read":{"hash":"8d49cf43f860a9a92bc7ba2639b1f1d2bef788914e9b7581a0ff264aeb8ea75b","at":1745044239239},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{1}","lines":[40,44],"size":153,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{2}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"86e18787043b64a6e2268bef3ce5e2e2aa3800fb43efdfa1a2cce65bb2b41e72"}}},"text":null,"length":0,"last_read":{"hash":"86e18787043b64a6e2268bef3ce5e2e2aa3800fb43efdfa1a2cce65bb2b41e72","at":1745044239511},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{2}","lines":[45,55],"size":552,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{3}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"5bcf91fcd74ec7ccbdf0668bec0cf1686d63988b45c68b48e1f5962d7ffe5715"}}},"text":null,"length":0,"last_read":{"hash":"5bcf91fcd74ec7ccbdf0668bec0cf1686d63988b45c68b48e1f5962d7ffe5715","at":1745044239808},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{3}","lines":[56,60],"size":247,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{4}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"2dc22ccef8c3402a5ac4abaa0d9d3a350eee06ac424149f82bf570c4fddd3260"}}},"text":null,"length":0,"last_read":{"hash":"2dc22ccef8c3402a5ac4abaa0d9d3a350eee06ac424149f82bf570c4fddd3260","at":1745044240105},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{4}","lines":[61,64],"size":189,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{5}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"5811d953170b6793a8a45ca5e752d10eef5ae29cf779f58152be963074ff9bdb"}}},"text":null,"length":0,"last_read":{"hash":"5811d953170b6793a8a45ca5e752d10eef5ae29cf779f58152be963074ff9bdb","at":1745044240400},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{5}","lines":[65,68],"size":18,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🛠️ Actionable Steps / Implementation": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"987270b84846f21b33e7f6358d077a9b1c30fb7fcfb5e791fce5f49b99486df8"}}},"text":null,"length":0,"last_read":{"hash":"987270b84846f21b33e7f6358d077a9b1c30fb7fcfb5e791fce5f49b99486df8","at":1745044240677},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🛠️ Actionable Steps / Implementation","lines":[69,77],"size":527,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🛠️ Actionable Steps / Implementation#{1}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"def21bbdd05c3f426f282c21c2d7195a88f7213f1517739212b70a64ed6003aa"}}},"text":null,"length":0,"last_read":{"hash":"def21bbdd05c3f426f282c21c2d7195a88f7213f1517739212b70a64ed6003aa","at":1745044240955},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🛠️ Actionable Steps / Implementation#{1}","lines":[70,75],"size":479,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🛠️ Actionable Steps / Implementation#{2}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b"}}},"text":null,"length":0,"last_read":{"hash":"cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b","at":1745044241220},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🛠️ Actionable Steps / Implementation#{2}","lines":[76,77],"size":4,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"d024144b8fb005dabd9ee4e7048a0cdd448ad9e23151a8a0ef2b9ba06bc52306"}}},"text":null,"length":0,"last_read":{"hash":"d024144b8fb005dabd9ee4e7048a0cdd448ad9e23151a8a0ef2b9ba06bc52306","at":1745044241490},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading","lines":[78,89],"size":681,"outlinks":[{"title":"Vertical Slice Example","target":"https://github.com/indie-dev-dan/codebase-architectures/tree/main/vertical-slice","line":3},{"title":"Atomic Composable Example","target":"https://github.com/indie-dev-dan/codebase-architectures/tree/main/atomic-composable","line":4}],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading#{1}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"3b46ccfea2f3e6c6932951f56866cb319492aae72d924dc254d31e90f63dfc3c"}}},"text":null,"length":0,"last_read":{"hash":"3b46ccfea2f3e6c6932951f56866cb319492aae72d924dc254d31e90f63dfc3c","at":1745044241809},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading#{1}","lines":[79,81],"size":254,"outlinks":[{"title":"Vertical Slice Example","target":"https://github.com/indie-dev-dan/codebase-architectures/tree/main/vertical-slice","line":2},{"title":"Atomic Composable Example","target":"https://github.com/indie-dev-dan/codebase-architectures/tree/main/atomic-composable","line":3}],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading#{2}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"f8dc8ad60edf457f866236d8b7bdf64a2ec8b545f4e03278d6ef0fe089357c62"}}},"text":null,"length":0,"last_read":{"hash":"f8dc8ad60edf457f866236d8b7bdf64a2ec8b545f4e03278d6ef0fe089357c62","at":1745044242084},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading#{2}","lines":[82,86],"size":244,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading#{3}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"2602efeda58a03e64ffed0c4fe5f37ff5b4b0ddefb9db1d69aebd1f1eec6566d"}}},"text":null,"length":0,"last_read":{"hash":"2602efeda58a03e64ffed0c4fe5f37ff5b4b0ddefb9db1d69aebd1f1eec6566d","at":1745044242383},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading#{3}","lines":[87,89],"size":144,"outlinks":[],"class_name":"SmartBlock"},

"smart_sources:output/Mesh Note (26).md": {"path":"output/Mesh Note (26).md","last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"54729e156c467142fa0d8a36079230aad3b3979cf8fb0513a8c4d8da316b723c"}}},"last_read":{"hash":"54729e156c467142fa0d8a36079230aad3b3979cf8fb0513a8c4d8da316b723c","at":1745044242381},"class_name":"SmartSource","last_import":{"mtime":1743124368830,"size":4393,"at":1745044139649,"hash":"54729e156c467142fa0d8a36079230aad3b3979cf8fb0513a8c4d8da316b723c"},"blocks":{"#📌 Optimal Codebase Architectures for AI Coding Tools":[1,89],"#📌 Optimal Codebase Architectures for AI Coding Tools#{1}":[3,17],"#---frontmatter---":[5,16],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts":[18,68],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️":[20,38],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{1}":[21,25],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{2}":[26,30],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{3}":[31,34],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{4}":[35,38],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️":[39,68],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{1}":[40,44],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{2}":[45,55],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{3}":[56,60],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{4}":[61,64],"#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{5}":[65,68],"#📌 Optimal Codebase Architectures for AI Coding Tools#🛠️ Actionable Steps / Implementation":[69,77],"#📌 Optimal Codebase Architectures for AI Coding Tools#🛠️ Actionable Steps / Implementation#{1}":[70,75],"#📌 Optimal Codebase Architectures for AI Coding Tools#🛠️ Actionable Steps / Implementation#{2}":[76,77],"#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading":[78,89],"#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading#{1}":[79,81],"#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading#{2}":[82,86],"#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading#{3}":[87,89]},"outlinks":[{"title":"Vertical Slice Example","target":"https://github.com/indie-dev-dan/codebase-architectures/tree/main/vertical-slice","line":80},{"title":"Atomic Composable Example","target":"https://github.com/indie-dev-dan/codebase-architectures/tree/main/atomic-composable","line":81}]},"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"54729e156c467142fa0d8a36079230aad3b3979cf8fb0513a8c4d8da316b723c"}}},"text":null,"length":0,"last_read":{"hash":"54729e156c467142fa0d8a36079230aad3b3979cf8fb0513a8c4d8da316b723c","at":1745044236309},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools","lines":[1,89],"size":4345,"outlinks":[{"title":"Vertical Slice Example","target":"https://github.com/indie-dev-dan/codebase-architectures/tree/main/vertical-slice","line":80},{"title":"Atomic Composable Example","target":"https://github.com/indie-dev-dan/codebase-architectures/tree/main/atomic-composable","line":81}],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#{1}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"4914ef5b1105871a4d15b95831819944be5279312384f93fb45ddbabc296473f"}}},"text":null,"length":0,"last_read":{"hash":"4914ef5b1105871a4d15b95831819944be5279312384f93fb45ddbabc296473f","at":1745044236607},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#{1}","lines":[3,17],"size":962,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#---frontmatter---": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"be0ab7e03731cb88a11516f14dcd66eb4636618aa39d44ebc39193eb79bc694d"}}},"text":null,"length":0,"last_read":{"hash":"be0ab7e03731cb88a11516f14dcd66eb4636618aa39d44ebc39193eb79bc694d","at":1745044236880},"key":"output/Mesh Note (26).md#---frontmatter---","lines":[5,16],"size":788,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"66739d1da4f2b936c0ff740d89445709e9e5ad51e220a7579e77fc6a70542c30"}}},"text":null,"length":0,"last_read":{"hash":"66739d1da4f2b936c0ff740d89445709e9e5ad51e220a7579e77fc6a70542c30","at":1745044237176},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts","lines":[18,68],"size":2113,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"5e2d1b46a41b9c98b92effc5ab25e6139e794756d686baf3e7540347ed35ef1d"}}},"text":null,"length":0,"last_read":{"hash":"5e2d1b46a41b9c98b92effc5ab25e6139e794756d686baf3e7540347ed35ef1d","at":1745044237478},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️","lines":[20,38],"size":869,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{1}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"5949ff2bb6e434cad2f723891f7c2959275b6c4d62dde77560d9495d481a8775"}}},"text":null,"length":0,"last_read":{"hash":"5949ff2bb6e434cad2f723891f7c2959275b6c4d62dde77560d9495d481a8775","at":1745044237751},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{1}","lines":[21,25],"size":165,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{2}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"efdff28734fc17733b22df0b8932e72158bf08227e1fe019a858fb4847c2cc99"}}},"text":null,"length":0,"last_read":{"hash":"efdff28734fc17733b22df0b8932e72158bf08227e1fe019a858fb4847c2cc99","at":1745044238078},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{2}","lines":[26,30],"size":438,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{3}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"31de118ba61e457914e95dfe6bd4b1c6735ed2cd13ac49769e6131bd464c5dc4"}}},"text":null,"length":0,"last_read":{"hash":"31de118ba61e457914e95dfe6bd4b1c6735ed2cd13ac49769e6131bd464c5dc4","at":1745044238364},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{3}","lines":[31,34],"size":189,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{4}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"5811d953170b6793a8a45ca5e752d10eef5ae29cf779f58152be963074ff9bdb"}}},"text":null,"length":0,"last_read":{"hash":"5811d953170b6793a8a45ca5e752d10eef5ae29cf779f58152be963074ff9bdb","at":1745044238657},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**1️⃣ Core Idea: Vertical Slice Architecture** ⬇️#{4}","lines":[35,38],"size":18,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"75fe43efefd62d2e3649ad39cde917b8a0ae6dae3e7f424f4e2acb50a443f37d"}}},"text":null,"length":0,"last_read":{"hash":"75fe43efefd62d2e3649ad39cde917b8a0ae6dae3e7f424f4e2acb50a443f37d","at":1745044238966},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️","lines":[39,68],"size":1221,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{1}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"8d49cf43f860a9a92bc7ba2639b1f1d2bef788914e9b7581a0ff264aeb8ea75b"}}},"text":null,"length":0,"last_read":{"hash":"8d49cf43f860a9a92bc7ba2639b1f1d2bef788914e9b7581a0ff264aeb8ea75b","at":1745044239239},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{1}","lines":[40,44],"size":153,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{2}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"86e18787043b64a6e2268bef3ce5e2e2aa3800fb43efdfa1a2cce65bb2b41e72"}}},"text":null,"length":0,"last_read":{"hash":"86e18787043b64a6e2268bef3ce5e2e2aa3800fb43efdfa1a2cce65bb2b41e72","at":1745044239511},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{2}","lines":[45,55],"size":552,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{3}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"5bcf91fcd74ec7ccbdf0668bec0cf1686d63988b45c68b48e1f5962d7ffe5715"}}},"text":null,"length":0,"last_read":{"hash":"5bcf91fcd74ec7ccbdf0668bec0cf1686d63988b45c68b48e1f5962d7ffe5715","at":1745044239808},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{3}","lines":[56,60],"size":247,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{4}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"2dc22ccef8c3402a5ac4abaa0d9d3a350eee06ac424149f82bf570c4fddd3260"}}},"text":null,"length":0,"last_read":{"hash":"2dc22ccef8c3402a5ac4abaa0d9d3a350eee06ac424149f82bf570c4fddd3260","at":1745044240105},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{4}","lines":[61,64],"size":189,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{5}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"5811d953170b6793a8a45ca5e752d10eef5ae29cf779f58152be963074ff9bdb"}}},"text":null,"length":0,"last_read":{"hash":"5811d953170b6793a8a45ca5e752d10eef5ae29cf779f58152be963074ff9bdb","at":1745044240400},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🔍 Key Concepts#**2️⃣ Supporting Insights: Other Architectures** ⬇️#{5}","lines":[65,68],"size":18,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🛠️ Actionable Steps / Implementation": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"987270b84846f21b33e7f6358d077a9b1c30fb7fcfb5e791fce5f49b99486df8"}}},"text":null,"length":0,"last_read":{"hash":"987270b84846f21b33e7f6358d077a9b1c30fb7fcfb5e791fce5f49b99486df8","at":1745044240677},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🛠️ Actionable Steps / Implementation","lines":[69,77],"size":527,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🛠️ Actionable Steps / Implementation#{1}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"def21bbdd05c3f426f282c21c2d7195a88f7213f1517739212b70a64ed6003aa"}}},"text":null,"length":0,"last_read":{"hash":"def21bbdd05c3f426f282c21c2d7195a88f7213f1517739212b70a64ed6003aa","at":1745044240955},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🛠️ Actionable Steps / Implementation#{1}","lines":[70,75],"size":479,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🛠️ Actionable Steps / Implementation#{2}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b"}}},"text":null,"length":0,"last_read":{"hash":"cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b","at":1745044241220},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#🛠️ Actionable Steps / Implementation#{2}","lines":[76,77],"size":4,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"d024144b8fb005dabd9ee4e7048a0cdd448ad9e23151a8a0ef2b9ba06bc52306"}}},"text":null,"length":0,"last_read":{"hash":"d024144b8fb005dabd9ee4e7048a0cdd448ad9e23151a8a0ef2b9ba06bc52306","at":1745044241490},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading","lines":[78,89],"size":681,"outlinks":[{"title":"Vertical Slice Example","target":"https://github.com/indie-dev-dan/codebase-architectures/tree/main/vertical-slice","line":3},{"title":"Atomic Composable Example","target":"https://github.com/indie-dev-dan/codebase-architectures/tree/main/atomic-composable","line":4}],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading#{1}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"3b46ccfea2f3e6c6932951f56866cb319492aae72d924dc254d31e90f63dfc3c"}}},"text":null,"length":0,"last_read":{"hash":"3b46ccfea2f3e6c6932951f56866cb319492aae72d924dc254d31e90f63dfc3c","at":1745044241809},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading#{1}","lines":[79,81],"size":254,"outlinks":[{"title":"Vertical Slice Example","target":"https://github.com/indie-dev-dan/codebase-architectures/tree/main/vertical-slice","line":2},{"title":"Atomic Composable Example","target":"https://github.com/indie-dev-dan/codebase-architectures/tree/main/atomic-composable","line":3}],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading#{2}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"f8dc8ad60edf457f866236d8b7bdf64a2ec8b545f4e03278d6ef0fe089357c62"}}},"text":null,"length":0,"last_read":{"hash":"f8dc8ad60edf457f866236d8b7bdf64a2ec8b545f4e03278d6ef0fe089357c62","at":1745044242084},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading#{2}","lines":[82,86],"size":244,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading#{3}": {"path":null,"last_embed":{"hash":null},"embeddings":{"TaylorAI/bge-micro-v2":{"last_embed":{"hash":"2602efeda58a03e64ffed0c4fe5f37ff5b4b0ddefb9db1d69aebd1f1eec6566d"}}},"text":null,"length":0,"last_read":{"hash":"2602efeda58a03e64ffed0c4fe5f37ff5b4b0ddefb9db1d69aebd1f1eec6566d","at":1745044242383},"key":"output/Mesh Note (26).md#📌 Optimal Codebase Architectures for AI Coding Tools#📚 References & Further Reading#{3}","lines":[87,89],"size":144,"outlinks":[],"class_name":"SmartBlock"},
